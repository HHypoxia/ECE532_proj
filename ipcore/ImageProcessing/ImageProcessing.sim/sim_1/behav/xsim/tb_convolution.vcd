$date
   Thu Feb  6 21:05:26 2025
$end
$version
  2018.3
$end
$timescale
  1ps
$end
$scope module tb_convolution $end
$var reg 1 ! d_clk $end
$var reg 1 " valid_in $end
$var reg 1 # mode $end
$var reg 216 $ RGB_data [215:0] $end
$var wire 1 % valid_out $end
$var wire 24 & convolved_rgb [23:0] $end
$var wire 8 ' convolved_grey [7:0] $end
$scope module dut $end
$var wire 1 ( d_clk $end
$var wire 1 ) valid_in $end
$var wire 1 * mode $end
$var wire 216 + RGB_data [215:0] $end
$var reg 1 , valid_out $end
$var reg 24 - convolved_rgb [23:0] $end
$var reg 8 . convolved_grey [7:0] $end
$var integer 32 / i $end
$var reg 1 0 multValid $end
$var reg 1 1 sumValid $end
$var reg 20 2 sumAll_r [19:0] $end
$var reg 20 3 sumAll_g [19:0] $end
$var reg 20 4 sumAll_b [19:0] $end
$var reg 8 5 r_out [7:0] $end
$var reg 8 6 g_out [7:0] $end
$var reg 8 7 b_out [7:0] $end
$var wire 8 8 r_norm [7:0] $end
$var wire 8 9 g_norm [7:0] $end
$var wire 8 : b_norm [7:0] $end
$var wire 8 ; grey_norm [7:0] $end
$var parameter 32 < SUM_ONE_KERNAL [31:0] $end
$var parameter 32 = SUM_ALL_KERNAL [31:0] $end
$upscope $end
$scope function packRGB $end
$var reg 24 > packRGB [23:0] $end
$var reg 8 ? R [7:0] $end
$var reg 8 @ G [7:0] $end
$var reg 8 A B [7:0] $end
$upscope $end
$scope task loadPixels $end
$var reg 8 B R0 [7:0] $end
$var reg 8 C G0 [7:0] $end
$var reg 8 D B0 [7:0] $end
$var reg 8 E R1 [7:0] $end
$var reg 8 F G1 [7:0] $end
$var reg 8 G B1 [7:0] $end
$var reg 8 H R2 [7:0] $end
$var reg 8 I G2 [7:0] $end
$var reg 8 J B2 [7:0] $end
$var reg 8 K R3 [7:0] $end
$var reg 8 L G3 [7:0] $end
$var reg 8 M B3 [7:0] $end
$var reg 8 N R4 [7:0] $end
$var reg 8 O G4 [7:0] $end
$var reg 8 P B4 [7:0] $end
$var reg 8 Q R5 [7:0] $end
$var reg 8 R G5 [7:0] $end
$var reg 8 S B5 [7:0] $end
$var reg 8 T R6 [7:0] $end
$var reg 8 U G6 [7:0] $end
$var reg 8 V B6 [7:0] $end
$var reg 8 W R7 [7:0] $end
$var reg 8 X G7 [7:0] $end
$var reg 8 Y B7 [7:0] $end
$var reg 8 Z R8 [7:0] $end
$var reg 8 [ G8 [7:0] $end
$var reg 8 \ B8 [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
b0 $
x%
bx &
bx '
0(
0)
1*
b0 +
x,
bx -
bx .
bx /
x0
x1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
b1001 <
b11011 =
bx >
bx ?
bx @
bx A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
$end
#5000
1!
1(
b1001 /
00
b0 2
b0 3
b0 4
#10000
0!
0(
#15000
1!
1(
b1001 /
01
b0 5
b0 6
b0 7
b0 8
b0 9
b0 :
b0 ;
#20000
0!
1"
b0 $
0(
1)
b0 >
b0 ?
b0 @
b0 A
b0 B
b0 C
b0 D
b0 E
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
b0 L
b0 M
b0 N
b0 O
b0 P
b0 Q
b0 R
b0 S
b0 T
b0 U
b0 V
b0 W
b0 X
b0 Y
b0 Z
b0 [
b0 \
#25000
1!
0%
b0 '
1(
0,
b0 .
b1001 /
10
#30000
0!
0(
#35000
1!
1(
b1001 /
11
#40000
0!
0(
#45000
1!
1%
1(
1,
b1001 /
#50000
0!
0(
#55000
1!
1(
b1001 /
#60000
0!
0(
#65000
1!
1(
b1001 /
#70000
0!
0"
0(
0)
#75000
1!
1(
b1001 /
00
#80000
0!
0(
#85000
1!
1(
b1001 /
01
#90000
0!
0(
#95000
1!
0%
1(
0,
b1001 /
#100000
0!
0(
#105000
1!
1(
b1001 /
#110000
0!
0(
#115000
1!
1(
b1001 /
#120000
0!
1"
b10000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001 $
0(
1)
b10000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001 +
b10000000100000001 >
b1 ?
b1 @
b1 A
b1 B
b1 C
b1 D
b1 E
b1 F
b1 G
b1 H
b1 I
b1 J
b1 K
b1 L
b1 M
b1 N
b1 O
b1 P
b1 Q
b1 R
b1 S
b1 T
b1 U
b1 V
b1 W
b1 X
b1 Y
b1 Z
b1 [
b1 \
#125000
1!
1(
b1001 /
10
b1001 2
b1001 3
b1001 4
#130000
0!
0"
0(
0)
#135000
1!
1(
b1001 /
00
11
b1001 5
b1001 6
b1001 7
b1 8
b1 9
b1 :
b1 ;
#140000
0!
0(
#145000
1!
1%
b1 '
1(
1,
b1 .
b1001 /
01
#150000
0!
0(
#155000
1!
0%
1(
0,
b1001 /
#160000
0!
0(
#165000
1!
1(
b1001 /
#170000
0!
0(
#175000
1!
1(
b1001 /
#180000
0!
0(
#185000
1!
1(
b1001 /
#190000
0!
0(
#195000
1!
1(
b1001 /
